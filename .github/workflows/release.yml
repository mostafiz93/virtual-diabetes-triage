name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mostafiz93/virtual-diabetes-triage

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set version (linear for v0.1)
        id: meta
        run: |
          TAG="${GITHUB_REF_NAME}"
          echo "version=$TAG" >> $GITHUB_OUTPUT
          echo "$TAG" > VERSION

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train full (linear v0.1)
        env:
          MODEL_VERSION: ${{ steps.meta.outputs.version }}
        run: python -m ml.train --out-dir artifacts --test-size 0.2

      - name: Show metrics
        id: metrics
        run: |
          echo "METRICS=$(jq -c . artifacts/metrics.json)" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: |
          docker build -t $REGISTRY/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }} .

      - name: Push image
        run: |
          docker push $REGISTRY/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}

      - name: Smoke test container
        run: |
          chmod +x scripts/smoke.sh
          ./scripts/smoke.sh $REGISTRY/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}

      - name: Compose release body
        id: body
        run: |
          echo "## ${GITHUB_REF_NAME}" > RELEASE_BODY.md
          echo "" >> RELEASE_BODY.md
          echo "Model: \`linear (StandardScaler + LinearRegression)\`" >> RELEASE_BODY.md
          echo "" >> RELEASE_BODY.md
          echo "**Metrics (on held-out split)**" >> RELEASE_BODY.md
          jq -r '. as $m | "| Metric | Value |\n|---|---|\n| RMSE | \($m.rmse) |"' artifacts/metrics.json >> RELEASE_BODY.md
          echo "" >> RELEASE_BODY.md
          echo "_Image_: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}\`" >> RELEASE_BODY.md

      - name: Upload metrics artifact
        uses: actions/upload-artifact@v4
        with:
          name: metrics
          path: artifacts/metrics.json

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/model.joblib
            artifacts/model_meta.json
            artifacts/metrics.json
          body_path: RELEASE_BODY.md
